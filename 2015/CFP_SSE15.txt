CfP: 7th International Workshop on Social Software Engineering (SSE'15)

http://socialse.org 

Workshop Co-located with the 10th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE 2015) 
http://esec-fse15.dei.polimi.it/

Bergamo, Italy - September 1, 2015

Paper submission: 15th June, 2015


***** MOTIVATION *****

The Workshop on Social Software Engineering (SSE) focuses on the interplay between social computing and software engineering. On one hand, social factors in software engineering activities, processes and tools are useful for improving the quality of development processes and the software produced by them. Examples include the role of situational awareness and multi-cultural factors in collaborative software development. On the other hand, social software mediates people-to-people communication, supporting human choices, actions and interactions with each other. Social software needs to accommodate a wide range of social concepts, such as trust, governance, reputation, and privacy. Being social, the software would also need to be receptive to users' choices and give them a voice in the design, operation and evolution decisions. The SSE workshop brings together academic and industrial perspectives to provide models, methods, tools and approaches to address these issues. 


***** TOPICS *****

In this workshop, we will bring together researchers and practitioners who build and study socially-oriented tools to support collaboration and knowledge sharing in software engineering. We will also investigate systematic engineering approaches for software which accommodates social aspects, such as norms, culture, roles and responsibilities, governance, decision rights, stakeholder goals and inter-dependencies, and the involvement of clients and end-users in shaping software at the design stages and also runtime. 

This workshop is organized around two categories of topics: 

1) Software Engineering as a Social Activity 

- Leveraging social computing in the requirements engineering, design, development, testing, and maintenance stages of software development
- Radically-distributed software engineering, semi-anonymous collaboration, "borderless" development teams
- Enriching software engineering processes and activities to accommodate social aspects among stakeholders 
- Analysing the use of social networks and media to connect users and incentivize their engagement in software development at design time and runtime
- The "social" software engineer: redefining the software engineering risks, rewards, and opportunities
- Using social media to teach software engineering and share knowledge between stakeholders 
- Research methods, models and empirical studies on the socialness of software engineering process
- Forward-looking scenarios and research agendas

2) Engineering Social Software

- Systematic capturing and analysis of users and community feedback
- Systematic and continuous involvement of users in planning and enacting software adaptation and evolution 
- Engineering methods, tools, and frameworks for social features such as inspiring trust and encouraging users to act as collaborators 
- Engineering software to support social awareness 
- Social adaptability to norms, culture, and organizational structure in production environments 
- Exploring and employing approaches in sociology and psychology to design social software
- Crowdsourcing for software engineering
- Engineering social and participatory sensing to gather data from users on the move
- Architectures and support tools for runtime management of software sociability
- Socially-oriented recommendation systems 
- Research methods, models and empirical studies regarding engineering the sociability and social adaptability of software 
- Forward-looking scenarios and research agendas


***** TYPES OF CONTRIBUTIONS *****

- Full papers (up to 8 pages) describing social software engineering challenges, needs, novel approaches, and frameworks. New approaches must be evaluated with users (who did not help design the system). Empirical evaluation papers and industrial experience reports are also welcome.
- Short position papers (up to 4 pages) describing a new idea or work in progress.
- Posters and demo papers (up to 2 pages) summarizing a research project, tool, or technique.


***** SUBMISSION *****

Accepted papers will be published as workshop proceedings in the ACM Digital Library. We accept only electronic submissions from the workshop homepage via Easy-Chair. To be considered for review, a paper submission must be in the ACM SIGSOFT Proceedings format (see http://www.acm.org/sigs/publications/proceedings-templates). For accepted papers, at least one author should participate at the workshop and register for the workshop at ESEC/FSE'15 conference. 

Submission link: https://easychair.org/conferences/?conf=sse20151


***** IMPORTANT DATES *****

15.06.2015	- Submission deadlines
29.06.2015	- Review feedback
15.07.2015	- Camera ready
01.09.2015	- Workshop


***** ORGANIZERS *****
Imed Hammouda, Chalmers and University of Gothenburg, Sweden
Alberto Sillitti, Center for Applied Software Engineering, Free University of Bolzano, Italy


***** STEERING COMMITTE *****
Filippo Lanubile, University of Bari, Italy
Raian Ali, Bournemouth University, UK 
Andrew Begel, Microsoft Research USA 
Imed Hammouda Chalmers and University of Gothenburg, Sweden
Walid Maalej, University of Hamburg, Germany 


***** PROGRAM COMMITTEE (partial) *****
Rami Bahsoon, University of Birmingham, UK
Andrew Begel, Microsoft Research, USA
Fabio Calefato, University of Bari, Italy
Fabiano Dalpiaz, Utrecht University, The Netherlands
Rosalba Giuffrida, IT University of Copenhagen, Denmark
Imed Hammouda, Chalmers and University of Gothenburg, Sweden
Eric Knauss, University of Gothenburg, Sweden
Dennis Pagano, CQSE GmbH, Germany
Rafael Prikladnicki, PUCRS, Brazil
Norbert Seyff, University of Zurich, Switzerland
Leif Singer, iDoneThis.com, USA / University of Victoria, Canada
Damian Andrew Tamburri, Vrije University Amsterdam, The Netherlands
Christoph Treude, McGill University, Canada
Alberto Sillitti, Center for Applied Software Engineering, Free University of Bolzano, Italy
Filippo Lanubile, University of Bari, Italy
Raian Ali, Bournemouth University, UK
Mohamed Amine Chatti, RWTH Aachen University, Germany
Gail E. Kaiser, Columbia University, USA
Kelly Lyons, University of Toronto, Canada
Keith Phalp, Bournemouth University, UK 
Margaret-Anne Storey, University of Victoria, Canada
Kelly Blincoe, Auckland University of Technology, New Zealand
Timo Johann, University of Hamburg, Germany

